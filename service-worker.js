"use strict";var precacheConfig=[["https://flowhub.github.io/bigiot-driver-app/app.css","85fdd15d325a8690463e86eff2205edf"],["https://flowhub.github.io/bigiot-driver-app/icons/icon_128x128.png","4b2947dfc41c8344e28572cb2d80ae1b"],["https://flowhub.github.io/bigiot-driver-app/icons/icon_192x192.png","62ad6c16c8d279c353958a9857f4cf6a"],["https://flowhub.github.io/bigiot-driver-app/icons/icon_256x256.png","df42faf477b8cfff966d44d191365fb8"],["https://flowhub.github.io/bigiot-driver-app/icons/icon_384x384.png","393cc0ad9175dd4647c31669fcd822c3"],["https://flowhub.github.io/bigiot-driver-app/icons/icon_512x512.png","a3c0b802e8fdaf4f5d5f2b77af390661"],["https://flowhub.github.io/bigiot-driver-app/icons/icon_96x96.png","48694f70c089be828972051a4e220ead"],["https://flowhub.github.io/bigiot-driver-app/index.html","1d11f6e4619b3480549230aeb827ffa6"],["https://flowhub.github.io/bigiot-driver-app/vendor/leaflet/leaflet.css","d1a8ab27978cdf7bb95502a041f0d6db"]],cacheName="sw-precache-v3-flowhub-bigiot-driver-app-cache-id-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var n=new URL(e);return"/"===n.pathname.slice(-1)&&(n.pathname+=t),n.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,n,r){var i=new URL(e);return r&&i.pathname.match(r)||(i.search+=(i.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(n)),i.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var n=new URL(t).pathname;return e.some(function(e){return n.match(e)})},stripIgnoredUrlParameters=function(e,t){var n=new URL(e);return n.hash="",n.search=n.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),n.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],n=e[1],r=new URL(t,self.location),i=createCacheKey(r,hashParamName,n,/\.\w{8}\./);return[r.toString(),i]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(n){if(!t.has(n)){var r=new Request(n,{credentials:"same-origin"});return fetch(r).then(function(t){if(!t.ok)throw new Error("Request for "+n+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(n,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(n){return Promise.all(n.map(function(n){if(!t.has(n.url))return e.delete(n)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,n=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);(t=urlsToCacheKeys.has(n))||(n=addDirectoryIndex(n,"index.html"),t=urlsToCacheKeys.has(n));var r="https://flowhub.github.io/bigiot-driver-app/index.html";!t&&"navigate"===e.request.mode&&isPathWhitelisted([],e.request.url)&&(n=new URL(r,self.location).toString(),t=urlsToCacheKeys.has(n)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(n)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});